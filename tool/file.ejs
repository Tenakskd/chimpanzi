<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ファイルビューア</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        #fileInput {
            margin: 20px 0;
        }
        #filePreview {
            margin-top: 20px;
            max-width: 100%;
            max-height: 500px;
        }
        #pdfViewer {
            width: 100%;
            height: 500px;
        }
        iframe {
            width: 100%;
            height: 500px;
            border: none;
        }
        video, audio {
            width: 100%;
            max-height: 500px;
        }
    </style>
</head>
<body>
<!-- ファイル選択 -->
    <input type="file" id="fileInput" accept="image/*, .pdf, .html, video/*, audio/*, .txt, .csv, .json, .md, .xml, .zip, .rar, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .svg, .woff, .woff2, .ttf, .otf" />
    
    <!-- プレビュー表示エリア -->
    <div id="filePreview">
        <!-- 画像、PDF、HTML、動画、音声、テキスト、CSVなどをここに表示 -->
    </div>

    <script>
        document.getElementById('fileInput').addEventListener('change', function(event) {
            const file = event.target.files[0];
            const filePreview = document.getElementById('filePreview');
            filePreview.innerHTML = ''; // 以前のプレビューをクリア

            if (!file) {
                return;
            }

            const reader = new FileReader();

            // 画像ファイルの場合
            if (file.type.startsWith('image/')) {
                reader.onload = function(e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.maxWidth = '100%';
                    img.style.maxHeight = '500px';
                    filePreview.appendChild(img);
                };
                reader.readAsDataURL(file);
            }
            // PDFファイルの場合
            else if (file.type === 'application/pdf') {
                const object = document.createElement('object');
                object.data = URL.createObjectURL(file);
                object.type = 'application/pdf';
                object.id = 'pdfViewer';
                filePreview.appendChild(object);
            }
            // HTMLファイルの場合
            else if (file.type === 'text/html') {
                const iframe = document.createElement('iframe');
                const url = URL.createObjectURL(file);
                iframe.src = url;
                filePreview.appendChild(iframe);
            }
            // 動画ファイルの場合
            else if (file.type.startsWith('video/')) {
                const video = document.createElement('video');
                video.controls = true;
                video.src = URL.createObjectURL(file);
                filePreview.appendChild(video);
            }
            // 音声ファイルの場合
            else if (file.type.startsWith('audio/')) {
                const audio = document.createElement('audio');
                audio.controls = true;
                audio.src = URL.createObjectURL(file);
                filePreview.appendChild(audio);
            }
            // テキストファイルの場合
            else if (file.type === 'text/plain') {
                reader.onload = function(e) {
                    const pre = document.createElement('pre');
                    pre.textContent = e.target.result;
                    filePreview.appendChild(pre);
                };
                reader.readAsText(file);
            }
            // CSVファイルの場合
            else if (file.type === 'text/csv') {
                reader.onload = function(e) {
                    const pre = document.createElement('pre');
                    pre.textContent = e.target.result;
                    filePreview.appendChild(pre);
                };
                reader.readAsText(file);
            }
            // JSONファイルの場合
            else if (file.type === 'application/json') {
                reader.onload = function(e) {
                    const jsonContent = JSON.stringify(JSON.parse(e.target.result), null, 2);
                    const pre = document.createElement('pre');
                    pre.textContent = jsonContent;
                    filePreview.appendChild(pre);
                };
                reader.readAsText(file);
            }
            // Markdownファイルの場合
            else if (file.type === 'text/markdown' || file.name.endsWith('.md')) {
                reader.onload = function(e) {
                    const pre = document.createElement('pre');
                    pre.textContent = e.target.result;
                    filePreview.appendChild(pre);
                };
                reader.readAsText(file);
            }
            // XMLファイルの場合
            else if (file.type === 'application/xml' || file.type === 'text/xml') {
                reader.onload = function(e) {
                    const pre = document.createElement('pre');
                    pre.textContent = e.target.result;
                    filePreview.appendChild(pre);
                };
                reader.readAsText(file);
            }
            // 圧縮ファイル（ZIP, RARなど）の場合
            else if (file.type === 'application/zip' || file.type === 'application/x-rar-compressed') {
                alert('圧縮ファイルはプレビューできません。');
            }
            // Microsoft Office系ファイル（Word, Excel, PowerPointなど）
            else if (file.type === 'application/msword' || file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {
                alert('Wordファイルはプレビューできません。');
            }
            else if (file.type === 'application/vnd.ms-excel' || file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {
                alert('Excelファイルはプレビューできません。');
            }
            else if (file.type === 'application/vnd.ms-powerpoint' || file.type === 'application/vnd.openxmlformats-officedocument.presentationml.presentation') {
                alert('PowerPointファイルはプレビューできません。');
            }
            // フォントファイル（woff, ttf, otfなど）
            else if (file.type === 'font/woff' || file.type === 'font/woff2' || file.type === 'font/ttf' || file.type === 'font/otf') {
                alert('フォントファイルはプレビューできません。');
            }
            // SVGファイルの場合
            else if (file.type === 'image/svg+xml') {
                const img = document.createElement('img');
                img.src = URL.createObjectURL(file);
                img.style.maxWidth = '100%';
                img.style.maxHeight = '500px';
                filePreview.appendChild(img);
            }
            else {
                alert('サポートされていないファイルタイプです');
            }
        });
    </script>
</body>
</html>
